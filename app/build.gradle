apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "kr.bobplanet.android"
        minSdkVersion 11
        targetSdkVersion 22
        versionCode 2
        versionName "1.0"
        multiDexEnabled true
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "2g"
    }
    signingConfigs {
        debug {
            storeFile file('team-bobplanet-dev.jks')
            storePassword 'storepass'
            keyAlias 'dev'
            keyPassword 'devpass'
        }
        release
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            buildConfigField 'boolean', 'DEV_VERSION', 'true'
            buildConfigField 'String', 'BACKEND_ROOT_URL', '"https://1dev-dot-kr-bobplanet.appspot.com/_ah/api/"'
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField 'boolean', 'DEV_VERSION', 'false'
            buildConfigField 'String', 'BACKEND_ROOT_URL', '"https://kr-bobplanet.appspot.com/_ah/api/"'

            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
        }
    }
    productFlavors {
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        classpath 'me.tatarka:gradle-retrolambda:3.2.3'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven {
        url "https://repo.commonsware.com.s3.amazonaws.com"
    }
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(path: ':backend', configuration: 'android-endpoints')
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.android.gms:play-services-identity:8.3.0'
    compile 'com.google.android.gms:play-services-plus:8.3.0'
    compile 'com.google.android.gms:play-services-gcm:8.3.0'
    compile 'com.google.android.gms:play-services-analytics:8.3.0'
    compile 'com.facebook.android:facebook-android-sdk:4.5.0'
    compile 'com.commonsware.cwac:pager:0.2.+'
    compile 'net.i2p.android.ext:floatingactionbutton:1.10.0'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'com.github.castorflex.smoothprogressbar:library:1.0.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.github.dexafree:materiallist:3.0.1'
    compile 'me.gujun.android.taggroup:library:1.4@aar'
    compile 'org.altbeacon:android-beacon-library:2+'
}

if (rootProject.file('secrets.properties').exists()) {
    def props = new Properties()
    props.load(new FileInputStream(rootProject.file('secrets.properties')))
    android.signingConfigs.release.storeFile file(props.get('android.signingConfigs.release.storeFile'))
    android.signingConfigs.release.storePassword props.get('android.signingConfigs.release.storePassword')
    android.signingConfigs.release.keyAlias props.get('android.signingConfigs.release.keyAlias')
    android.signingConfigs.release.keyPassword props.get('android.signingConfigs.release.keyPassword')
}